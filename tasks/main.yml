---
# tasks file for ansible-role-rainloop/

- name: Install base packages
  apt:
    pkg:
      - unzip
      - php{{ php_version }}-sqlite3
      - php{{ php_version }}-pgsql
      - php{{ php_version }}-mysql
      - php{{ php_version }}-fpm
      - php{{ php_version }}-gd
      - php{{ php_version }}-cli
      - php{{ php_version }}-curl
      - php{{ php_version }}-dom

- name: Create directory /srv/www
  file: path=/srv/www/{{ rainloop_hostname }} state=directory

- name: Set upload_max_filesize to 100M in php.ini
  replace: dest=/etc/php/{{ php_version }}/fpm/php.ini regexp='upload_max_filesize(\s+)(.+)' replace='upload_max_filesize = 100M'
  notify:
    - Restart php-fpm

- name: Set post_max_size to 100M in php.ini
  replace: dest=/etc/php/{{ php_version }}/fpm/php.ini regexp='post_max_size(\s+)(.+)' replace='post_max_size = 100M'
  notify:
    - Restart php-fpm

- name: Install rainloop
  unarchive:
    src: https://www.rainloop.net/repository/webmail/rainloop-community-latest.zip
    remote_src: yes
    dest: /srv/www/{{ rainloop_hostname }}
    creates: /srv/www/{{ rainloop_hostname }}/index.php
  notify:
    - reload nginx

- name: Create the nginx configuration for rainloop
  template: src=nginx/rainloop.j2 dest=/etc/nginx/sites-available/{{ rainloop_hostname }}
  notify:
   - reload nginx


- name: Create the links to enable rainloop configuration
  file: path=/etc/nginx/sites-enabled/{{ rainloop_hostname }} state=link src=/etc/nginx/sites-available/{{ rainloop_hostname }}
  notify:
   - reload nginx
